name: CI
on:
  - push
  - pull_request

jobs:
  test:
    name: "Test (Node ${{ matrix.node-version }} on ${{ matrix.os }})"
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        node-version:
          - lts/-1
          - lts/*
          - latest
        continue-on-error: [false]
        include:
          - { os: ubuntu-20.04, node-version: 14, continue-on-error: true }
    continue-on-error: ${{ matrix.continue-on-error }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      - if: startsWith(matrix.os, 'ubuntu')
        run: sudo apt-get install nginx-light

      - if: startsWith(matrix.os, 'macos')
        run: brew install nginx

      - if: startsWith(matrix.os, 'windows')
        uses: engineerd/configurator@v0.0.10
        with:
          name: nginx.exe
          url: https://nginx.org/download/nginx-1.22.0.zip
          pathInArchive: nginx-1.22.0/nginx.exe

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - run: yarn install --frozen-lockfile
      - run: yarn build
      - run: yarn test

  publish:
    name: Publish to npmjs
    needs: [test]
    if: startsWith(github.ref, 'refs/tags/v') && github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - run: sudo apt-get install asciidoctor pandoc

      - uses: actions/setup-node@v3
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org

      - run: yarn install --frozen-lockfile
      - run: yarn build

      - run: yarn publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
